# Generated by Django 3.1.5 on 2021-01-27 10:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('order', models.IntegerField(default=-1)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Row',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.FloatField(blank=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lookup_hub.category')),
            ],
            options={
                'ordering': ('order',),
                'unique_together': {('category', 'order')},
            },
        ),
        migrations.CreateModel(
            name='HistoricalCell',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'German'), ('nl', 'Dutch')], max_length=5)),
                ('text', models.CharField(blank=True, default='', max_length=200)),
                ('comment', models.CharField(blank=True, default='', max_length=2000)),
                ('colour', models.CharField(blank=True, default='', max_length=50)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('row', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lookup_hub.row')),
            ],
            options={
                'verbose_name': 'historical cell',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'German'), ('nl', 'Dutch')], max_length=5)),
                ('text', models.CharField(blank=True, default='', max_length=200)),
                ('comment', models.CharField(blank=True, default='', max_length=2000)),
                ('colour', models.CharField(blank=True, default='', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('row', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lookup_hub.row')),
            ],
            options={
                'ordering': ('language',),
                'unique_together': {('language', 'row')},
            },
        ),
    ]
